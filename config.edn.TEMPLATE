;; vim: ft=clojure
{:prod {:com.platypub/enable-web true
        :com.platypub/enable-worker true
        :com.platypub/copy-theme-npm-deps true
        ;; Uncomment these if you'd like to deploy Platypub on the web.
        ;; :com.platypub/allowed-users #{"hello@example.com"}
        ;; :com.platypub/enable-email-signin true
        :biff.xtdb/dir "storage/xtdb"
        :biff.xtdb/topology :standalone
        ;; Standalone topology in production isn't recommended for anything
        ;; serious. You can uncomment the following to use managed postgres
        ;; instead.
        ;; :biff.xtdb/topology :jdbc
        ;; :biff.xtdb.jdbc/user "user"
        ;; :biff.xtdb.jdbc/password "JDBC_PASSWORD" ; Leave this as-is, and update secrets.env
        ;; :biff.xtdb.jdbc/host "host"
        ;; :biff.xtdb.jdbc/port 5432
        ;; :biff.xtdb.jdbc/dbname "dbname"
        :biff/base-url "https://example.com"
        :biff.middleware/cookie-secret nil
        :biff/jwt-secret nil
        ;; S3 is used for hosting images that you upload in the CMS. It's
        ;; intended that site themes can either copy the images to Netlify or
        ;; just link to S3.
        ;; I'm using DigitalOcean Spaces (an S3 clone). The values of base-url,
        ;; bucket, and cdn below are what I'm actually using, for illustration.
        ;; You will need to change them to your own values.
        :s3/base-url "https://sfo3.digitaloceanspaces.com"
        :s3/bucket "platypub"
        :s3/cdn "https://platypub.sfo3.cdn.digitaloceanspaces.com"
        :s3/access-key "..."
        :mailgun/domain "..."
        ;; Used for stopping bot form submissions on generated websites.
        ;; Go to https://www.google.com/recaptcha/admin and create a "v2 Invisible" token.
        :recaptcha/site ""}
 :dev {:merge [:prod]
       :com.platypub/enable-beholder true
       :com.platypub/copy-theme-npm-deps false
       :biff/host "0.0.0.0"
       :biff/base-url "http://localhost:8080"
       :biff.xtdb/topology :standalone
       :biff.middleware/secure false}
 :tasks {;; Set this if the auto-detection doesn't work
         ;; Possible values: macos-x64, macos-arm64, linux-x64, linux-arm64
         :biff.tasks/tailwind-build nil
         :biff.tasks/clj-args ["-J-XX:-OmitStackTraceInFastThrow"
                               "-J-XX:+CrashOnOutOfMemoryError"
                               "-M" "-m" "com.platypub"
                               "--port" "7888"
                               "--middleware" "[cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]"]
         :biff.tasks/soft-deploy-fn com.platypub/on-save
         :biff.tasks/deploy-cmd ["git" "push" "prod" "master"]
         :biff.tasks/server "example.com"}}
